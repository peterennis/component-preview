/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@ionic/core';
import 'ionicons';


declare global {

  namespace StencilComponents {
    interface PageActionSheet {

    }
  }

  interface HTMLPageActionSheetElement extends StencilComponents.PageActionSheet, HTMLStencilElement {}

  var HTMLPageActionSheetElement: {
    prototype: HTMLPageActionSheetElement;
    new (): HTMLPageActionSheetElement;
  };
  interface HTMLElementTagNameMap {
    'page-action-sheet': HTMLPageActionSheetElement;
  }
  interface ElementTagNameMap {
    'page-action-sheet': HTMLPageActionSheetElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-action-sheet': JSXElements.PageActionSheetAttributes;
    }
  }
  namespace JSXElements {
    export interface PageActionSheetAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageAlert {

    }
  }

  interface HTMLPageAlertElement extends StencilComponents.PageAlert, HTMLStencilElement {}

  var HTMLPageAlertElement: {
    prototype: HTMLPageAlertElement;
    new (): HTMLPageAlertElement;
  };
  interface HTMLElementTagNameMap {
    'page-alert': HTMLPageAlertElement;
  }
  interface ElementTagNameMap {
    'page-alert': HTMLPageAlertElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-alert': JSXElements.PageAlertAttributes;
    }
  }
  namespace JSXElements {
    export interface PageAlertAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageBadge {

    }
  }

  interface HTMLPageBadgeElement extends StencilComponents.PageBadge, HTMLStencilElement {}

  var HTMLPageBadgeElement: {
    prototype: HTMLPageBadgeElement;
    new (): HTMLPageBadgeElement;
  };
  interface HTMLElementTagNameMap {
    'page-badge': HTMLPageBadgeElement;
  }
  interface ElementTagNameMap {
    'page-badge': HTMLPageBadgeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-badge': JSXElements.PageBadgeAttributes;
    }
  }
  namespace JSXElements {
    export interface PageBadgeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageButton {

    }
  }

  interface HTMLPageButtonElement extends StencilComponents.PageButton, HTMLStencilElement {}

  var HTMLPageButtonElement: {
    prototype: HTMLPageButtonElement;
    new (): HTMLPageButtonElement;
  };
  interface HTMLElementTagNameMap {
    'page-button': HTMLPageButtonElement;
  }
  interface ElementTagNameMap {
    'page-button': HTMLPageButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-button': JSXElements.PageButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface PageButtonAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageCard {

    }
  }

  interface HTMLPageCardElement extends StencilComponents.PageCard, HTMLStencilElement {}

  var HTMLPageCardElement: {
    prototype: HTMLPageCardElement;
    new (): HTMLPageCardElement;
  };
  interface HTMLElementTagNameMap {
    'page-card': HTMLPageCardElement;
  }
  interface ElementTagNameMap {
    'page-card': HTMLPageCardElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-card': JSXElements.PageCardAttributes;
    }
  }
  namespace JSXElements {
    export interface PageCardAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageCheckbox {

    }
  }

  interface HTMLPageCheckboxElement extends StencilComponents.PageCheckbox, HTMLStencilElement {}

  var HTMLPageCheckboxElement: {
    prototype: HTMLPageCheckboxElement;
    new (): HTMLPageCheckboxElement;
  };
  interface HTMLElementTagNameMap {
    'page-checkbox': HTMLPageCheckboxElement;
  }
  interface ElementTagNameMap {
    'page-checkbox': HTMLPageCheckboxElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-checkbox': JSXElements.PageCheckboxAttributes;
    }
  }
  namespace JSXElements {
    export interface PageCheckboxAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface ComponentPreview {

    }
  }

  interface HTMLComponentPreviewElement extends StencilComponents.ComponentPreview, HTMLStencilElement {}

  var HTMLComponentPreviewElement: {
    prototype: HTMLComponentPreviewElement;
    new (): HTMLComponentPreviewElement;
  };
  interface HTMLElementTagNameMap {
    'component-preview': HTMLComponentPreviewElement;
  }
  interface ElementTagNameMap {
    'component-preview': HTMLComponentPreviewElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'component-preview': JSXElements.ComponentPreviewAttributes;
    }
  }
  namespace JSXElements {
    export interface ComponentPreviewAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageDatetime {

    }
  }

  interface HTMLPageDatetimeElement extends StencilComponents.PageDatetime, HTMLStencilElement {}

  var HTMLPageDatetimeElement: {
    prototype: HTMLPageDatetimeElement;
    new (): HTMLPageDatetimeElement;
  };
  interface HTMLElementTagNameMap {
    'page-datetime': HTMLPageDatetimeElement;
  }
  interface ElementTagNameMap {
    'page-datetime': HTMLPageDatetimeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-datetime': JSXElements.PageDatetimeAttributes;
    }
  }
  namespace JSXElements {
    export interface PageDatetimeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageFab {

    }
  }

  interface HTMLPageFabElement extends StencilComponents.PageFab, HTMLStencilElement {}

  var HTMLPageFabElement: {
    prototype: HTMLPageFabElement;
    new (): HTMLPageFabElement;
  };
  interface HTMLElementTagNameMap {
    'page-fab': HTMLPageFabElement;
  }
  interface ElementTagNameMap {
    'page-fab': HTMLPageFabElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-fab': JSXElements.PageFabAttributes;
    }
  }
  namespace JSXElements {
    export interface PageFabAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageGrid {

    }
  }

  interface HTMLPageGridElement extends StencilComponents.PageGrid, HTMLStencilElement {}

  var HTMLPageGridElement: {
    prototype: HTMLPageGridElement;
    new (): HTMLPageGridElement;
  };
  interface HTMLElementTagNameMap {
    'page-grid': HTMLPageGridElement;
  }
  interface ElementTagNameMap {
    'page-grid': HTMLPageGridElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-grid': JSXElements.PageGridAttributes;
    }
  }
  namespace JSXElements {
    export interface PageGridAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppList {
      'items': any[];
    }
  }

  interface HTMLAppListElement extends StencilComponents.AppList, HTMLStencilElement {}

  var HTMLAppListElement: {
    prototype: HTMLAppListElement;
    new (): HTMLAppListElement;
  };
  interface HTMLElementTagNameMap {
    'app-list': HTMLAppListElement;
  }
  interface ElementTagNameMap {
    'app-list': HTMLAppListElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-list': JSXElements.AppListAttributes;
    }
  }
  namespace JSXElements {
    export interface AppListAttributes extends HTMLAttributes {
      'items'?: any[];
    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageInfiniteScroll {

    }
  }

  interface HTMLPageInfiniteScrollElement extends StencilComponents.PageInfiniteScroll, HTMLStencilElement {}

  var HTMLPageInfiniteScrollElement: {
    prototype: HTMLPageInfiniteScrollElement;
    new (): HTMLPageInfiniteScrollElement;
  };
  interface HTMLElementTagNameMap {
    'page-infinite-scroll': HTMLPageInfiniteScrollElement;
  }
  interface ElementTagNameMap {
    'page-infinite-scroll': HTMLPageInfiniteScrollElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-infinite-scroll': JSXElements.PageInfiniteScrollAttributes;
    }
  }
  namespace JSXElements {
    export interface PageInfiniteScrollAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageInput {

    }
  }

  interface HTMLPageInputElement extends StencilComponents.PageInput, HTMLStencilElement {}

  var HTMLPageInputElement: {
    prototype: HTMLPageInputElement;
    new (): HTMLPageInputElement;
  };
  interface HTMLElementTagNameMap {
    'page-input': HTMLPageInputElement;
  }
  interface ElementTagNameMap {
    'page-input': HTMLPageInputElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-input': JSXElements.PageInputAttributes;
    }
  }
  namespace JSXElements {
    export interface PageInputAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageList {

    }
  }

  interface HTMLPageListElement extends StencilComponents.PageList, HTMLStencilElement {}

  var HTMLPageListElement: {
    prototype: HTMLPageListElement;
    new (): HTMLPageListElement;
  };
  interface HTMLElementTagNameMap {
    'page-list': HTMLPageListElement;
  }
  interface ElementTagNameMap {
    'page-list': HTMLPageListElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-list': JSXElements.PageListAttributes;
    }
  }
  namespace JSXElements {
    export interface PageListAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageLoading {

    }
  }

  interface HTMLPageLoadingElement extends StencilComponents.PageLoading, HTMLStencilElement {}

  var HTMLPageLoadingElement: {
    prototype: HTMLPageLoadingElement;
    new (): HTMLPageLoadingElement;
  };
  interface HTMLElementTagNameMap {
    'page-loading': HTMLPageLoadingElement;
  }
  interface ElementTagNameMap {
    'page-loading': HTMLPageLoadingElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-loading': JSXElements.PageLoadingAttributes;
    }
  }
  namespace JSXElements {
    export interface PageLoadingAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface HomePage {

    }
  }

  interface HTMLHomePageElement extends StencilComponents.HomePage, HTMLStencilElement {}

  var HTMLHomePageElement: {
    prototype: HTMLHomePageElement;
    new (): HTMLHomePageElement;
  };
  interface HTMLElementTagNameMap {
    'home-page': HTMLHomePageElement;
  }
  interface ElementTagNameMap {
    'home-page': HTMLHomePageElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'home-page': JSXElements.HomePageAttributes;
    }
  }
  namespace JSXElements {
    export interface HomePageAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageMenu {

    }
  }

  interface HTMLPageMenuElement extends StencilComponents.PageMenu, HTMLStencilElement {}

  var HTMLPageMenuElement: {
    prototype: HTMLPageMenuElement;
    new (): HTMLPageMenuElement;
  };
  interface HTMLElementTagNameMap {
    'page-menu': HTMLPageMenuElement;
  }
  interface ElementTagNameMap {
    'page-menu': HTMLPageMenuElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-menu': JSXElements.PageMenuAttributes;
    }
  }
  namespace JSXElements {
    export interface PageMenuAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface ProfilePage {

    }
  }

  interface HTMLProfilePageElement extends StencilComponents.ProfilePage, HTMLStencilElement {}

  var HTMLProfilePageElement: {
    prototype: HTMLProfilePageElement;
    new (): HTMLProfilePageElement;
  };
  interface HTMLElementTagNameMap {
    'profile-page': HTMLProfilePageElement;
  }
  interface ElementTagNameMap {
    'profile-page': HTMLProfilePageElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'profile-page': JSXElements.ProfilePageAttributes;
    }
  }
  namespace JSXElements {
    export interface ProfilePageAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface ModalPage {
      'char': string;
    }
  }

  interface HTMLModalPageElement extends StencilComponents.ModalPage, HTMLStencilElement {}

  var HTMLModalPageElement: {
    prototype: HTMLModalPageElement;
    new (): HTMLModalPageElement;
  };
  interface HTMLElementTagNameMap {
    'modal-page': HTMLModalPageElement;
  }
  interface ElementTagNameMap {
    'modal-page': HTMLModalPageElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'modal-page': JSXElements.ModalPageAttributes;
    }
  }
  namespace JSXElements {
    export interface ModalPageAttributes extends HTMLAttributes {
      'char'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageModal {

    }
  }

  interface HTMLPageModalElement extends StencilComponents.PageModal, HTMLStencilElement {}

  var HTMLPageModalElement: {
    prototype: HTMLPageModalElement;
    new (): HTMLPageModalElement;
  };
  interface HTMLElementTagNameMap {
    'page-modal': HTMLPageModalElement;
  }
  interface ElementTagNameMap {
    'page-modal': HTMLPageModalElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-modal': JSXElements.PageModalAttributes;
    }
  }
  namespace JSXElements {
    export interface PageModalAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface NavDetails {
      'tech': any;
    }
  }

  interface HTMLNavDetailsElement extends StencilComponents.NavDetails, HTMLStencilElement {}

  var HTMLNavDetailsElement: {
    prototype: HTMLNavDetailsElement;
    new (): HTMLNavDetailsElement;
  };
  interface HTMLElementTagNameMap {
    'nav-details': HTMLNavDetailsElement;
  }
  interface ElementTagNameMap {
    'nav-details': HTMLNavDetailsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'nav-details': JSXElements.NavDetailsAttributes;
    }
  }
  namespace JSXElements {
    export interface NavDetailsAttributes extends HTMLAttributes {
      'tech'?: any;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface NavHome {

    }
  }

  interface HTMLNavHomeElement extends StencilComponents.NavHome, HTMLStencilElement {}

  var HTMLNavHomeElement: {
    prototype: HTMLNavHomeElement;
    new (): HTMLNavHomeElement;
  };
  interface HTMLElementTagNameMap {
    'nav-home': HTMLNavHomeElement;
  }
  interface ElementTagNameMap {
    'nav-home': HTMLNavHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'nav-home': JSXElements.NavHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface NavHomeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageNav {

    }
  }

  interface HTMLPageNavElement extends StencilComponents.PageNav, HTMLStencilElement {}

  var HTMLPageNavElement: {
    prototype: HTMLPageNavElement;
    new (): HTMLPageNavElement;
  };
  interface HTMLElementTagNameMap {
    'page-nav': HTMLPageNavElement;
  }
  interface ElementTagNameMap {
    'page-nav': HTMLPageNavElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-nav': JSXElements.PageNavAttributes;
    }
  }
  namespace JSXElements {
    export interface PageNavAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PopoverPage {
      'contentEl': HTMLElement;
    }
  }

  interface HTMLPopoverPageElement extends StencilComponents.PopoverPage, HTMLStencilElement {}

  var HTMLPopoverPageElement: {
    prototype: HTMLPopoverPageElement;
    new (): HTMLPopoverPageElement;
  };
  interface HTMLElementTagNameMap {
    'popover-page': HTMLPopoverPageElement;
  }
  interface ElementTagNameMap {
    'popover-page': HTMLPopoverPageElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'popover-page': JSXElements.PopoverPageAttributes;
    }
  }
  namespace JSXElements {
    export interface PopoverPageAttributes extends HTMLAttributes {
      'contentEl'?: HTMLElement;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface PagePopover {

    }
  }

  interface HTMLPagePopoverElement extends StencilComponents.PagePopover, HTMLStencilElement {}

  var HTMLPagePopoverElement: {
    prototype: HTMLPagePopoverElement;
    new (): HTMLPagePopoverElement;
  };
  interface HTMLElementTagNameMap {
    'page-popover': HTMLPagePopoverElement;
  }
  interface ElementTagNameMap {
    'page-popover': HTMLPagePopoverElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-popover': JSXElements.PagePopoverAttributes;
    }
  }
  namespace JSXElements {
    export interface PagePopoverAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageRange {

    }
  }

  interface HTMLPageRangeElement extends StencilComponents.PageRange, HTMLStencilElement {}

  var HTMLPageRangeElement: {
    prototype: HTMLPageRangeElement;
    new (): HTMLPageRangeElement;
  };
  interface HTMLElementTagNameMap {
    'page-range': HTMLPageRangeElement;
  }
  interface ElementTagNameMap {
    'page-range': HTMLPageRangeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-range': JSXElements.PageRangeAttributes;
    }
  }
  namespace JSXElements {
    export interface PageRangeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageRefresher {

    }
  }

  interface HTMLPageRefresherElement extends StencilComponents.PageRefresher, HTMLStencilElement {}

  var HTMLPageRefresherElement: {
    prototype: HTMLPageRefresherElement;
    new (): HTMLPageRefresherElement;
  };
  interface HTMLElementTagNameMap {
    'page-refresher': HTMLPageRefresherElement;
  }
  interface ElementTagNameMap {
    'page-refresher': HTMLPageRefresherElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-refresher': JSXElements.PageRefresherAttributes;
    }
  }
  namespace JSXElements {
    export interface PageRefresherAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageSearchbar {

    }
  }

  interface HTMLPageSearchbarElement extends StencilComponents.PageSearchbar, HTMLStencilElement {}

  var HTMLPageSearchbarElement: {
    prototype: HTMLPageSearchbarElement;
    new (): HTMLPageSearchbarElement;
  };
  interface HTMLElementTagNameMap {
    'page-searchbar': HTMLPageSearchbarElement;
  }
  interface ElementTagNameMap {
    'page-searchbar': HTMLPageSearchbarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-searchbar': JSXElements.PageSearchbarAttributes;
    }
  }
  namespace JSXElements {
    export interface PageSearchbarAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageSelect {

    }
  }

  interface HTMLPageSelectElement extends StencilComponents.PageSelect, HTMLStencilElement {}

  var HTMLPageSelectElement: {
    prototype: HTMLPageSelectElement;
    new (): HTMLPageSelectElement;
  };
  interface HTMLElementTagNameMap {
    'page-select': HTMLPageSelectElement;
  }
  interface ElementTagNameMap {
    'page-select': HTMLPageSelectElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-select': JSXElements.PageSelectAttributes;
    }
  }
  namespace JSXElements {
    export interface PageSelectAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageSlides {

    }
  }

  interface HTMLPageSlidesElement extends StencilComponents.PageSlides, HTMLStencilElement {}

  var HTMLPageSlidesElement: {
    prototype: HTMLPageSlidesElement;
    new (): HTMLPageSlidesElement;
  };
  interface HTMLElementTagNameMap {
    'page-slides': HTMLPageSlidesElement;
  }
  interface ElementTagNameMap {
    'page-slides': HTMLPageSlidesElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-slides': JSXElements.PageSlidesAttributes;
    }
  }
  namespace JSXElements {
    export interface PageSlidesAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageSpinner {

    }
  }

  interface HTMLPageSpinnerElement extends StencilComponents.PageSpinner, HTMLStencilElement {}

  var HTMLPageSpinnerElement: {
    prototype: HTMLPageSpinnerElement;
    new (): HTMLPageSpinnerElement;
  };
  interface HTMLElementTagNameMap {
    'page-spinner': HTMLPageSpinnerElement;
  }
  interface ElementTagNameMap {
    'page-spinner': HTMLPageSpinnerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-spinner': JSXElements.PageSpinnerAttributes;
    }
  }
  namespace JSXElements {
    export interface PageSpinnerAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageTabs {

    }
  }

  interface HTMLPageTabsElement extends StencilComponents.PageTabs, HTMLStencilElement {}

  var HTMLPageTabsElement: {
    prototype: HTMLPageTabsElement;
    new (): HTMLPageTabsElement;
  };
  interface HTMLElementTagNameMap {
    'page-tabs': HTMLPageTabsElement;
  }
  interface ElementTagNameMap {
    'page-tabs': HTMLPageTabsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-tabs': JSXElements.PageTabsAttributes;
    }
  }
  namespace JSXElements {
    export interface PageTabsAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageToast {

    }
  }

  interface HTMLPageToastElement extends StencilComponents.PageToast, HTMLStencilElement {}

  var HTMLPageToastElement: {
    prototype: HTMLPageToastElement;
    new (): HTMLPageToastElement;
  };
  interface HTMLElementTagNameMap {
    'page-toast': HTMLPageToastElement;
  }
  interface ElementTagNameMap {
    'page-toast': HTMLPageToastElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-toast': JSXElements.PageToastAttributes;
    }
  }
  namespace JSXElements {
    export interface PageToastAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageVirtualScroll {

    }
  }

  interface HTMLPageVirtualScrollElement extends StencilComponents.PageVirtualScroll, HTMLStencilElement {}

  var HTMLPageVirtualScrollElement: {
    prototype: HTMLPageVirtualScrollElement;
    new (): HTMLPageVirtualScrollElement;
  };
  interface HTMLElementTagNameMap {
    'page-virtual-scroll': HTMLPageVirtualScrollElement;
  }
  interface ElementTagNameMap {
    'page-virtual-scroll': HTMLPageVirtualScrollElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-virtual-scroll': JSXElements.PageVirtualScrollAttributes;
    }
  }
  namespace JSXElements {
    export interface PageVirtualScrollAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
